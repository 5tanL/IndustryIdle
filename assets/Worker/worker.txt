(()=>{var W=Object.create;var b=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var C=l=>b(l,"__esModule",{value:!0});var o=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports);var H=(l,e,d,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of M(e))!S.call(l,t)&&(d||t!=="default")&&b(l,t,{get:()=>e[t],enumerable:!(s=_(e,t))||s.enumerable});return l},q=(l,e)=>H(C(b(l!=null?W(v(l)):{},"default",!e&&l&&l.__esModule?{get:()=>l.default,enumerable:!0}:{value:l,enumerable:!0})),l);var V=o(a=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.Node=void 0;var L=class{constructor(e){this.id=e.id,this.position=e.position,this.hValue=0,this.gValue=0,this.fValue=0,this.parentNode=void 0,this.isOnClosedList=!1,this.isOnOpenList=!1,this.isWalkable=e.walkable||!0}calculateFValue(){this.fValue=this.gValue+this.hValue}setGValue(e){this.gValue=e,this.calculateFValue()}setHValue(e){this.hValue=e,this.calculateFValue()}setFGHValuesToZero(){this.fValue=this.gValue=this.hValue=0}getFValue(){return this.fValue}getGValue(){return this.gValue}getHValue(){return this.hValue}getParent(){return this.parentNode}getIsOnClosedList(){return this.isOnClosedList}getIsOnOpenList(){return this.isOnOpenList}getIsWalkable(){return this.isWalkable}setParent(e){this.parentNode=e}setIsOnClosedList(e){this.isOnClosedList=e}setIsOnOpenList(e){this.isOnOpenList=e}setIsWalkable(e){this.isWalkable=e}};a.Node=L});var N=o(c=>{"use strict";Object.defineProperty(c,"__esModule",{value:!0});c.Grid=void 0;var y=V(),w=class{constructor(e){e.width&&e.height?(this.width=e.width,this.height=e.height,this.numberOfFields=this.width*this.height):e.matrix&&(this.width=e.matrix[0].length,this.height=e.matrix.length,this.numberOfFields=this.width*this.height),this.gridNodes=this.buildGridWithNodes(e.matrix||void 0,this.width,this.height,e.densityOfObstacles||0)}buildGridWithNodes(e,d,s,t){let i=[],h=0;for(let n=0;n<s;n++){i[n]=[];for(let r=0;r<d;r++)i[n][r]=new y.Node({id:h,position:{x:r,y:n}}),h++}if(e===void 0){for(let n=0;n<s;n++)for(let r=0;r<d;r++)Math.floor(Math.random()*10)+1>10-t?i[n][r].setIsWalkable(!1):i[n][r].setIsWalkable(!0);return i}for(let n=0;n<s;n++)for(let r=0;r<d;r++)e[n][r]?i[n][r].setIsWalkable(!1):i[n][r].setIsWalkable(!0);return i}getNodeAt(e){return this.gridNodes[e.y][e.x]}isWalkableAt(e){return this.gridNodes[e.y][e.x].getIsWalkable()}isOnTheGrid(e){return e.x>=0&&e.x<this.width&&e.y>=0&&e.y<this.height}getSurroundingNodes(e,d){let s=[];for(var t=e.y-1;t<=e.y+1;t++)for(var i=e.x-1;i<=e.x+1;i++)if(this.isOnTheGrid({x:i,y:t}))if(this.isWalkableAt({x:i,y:t}))d?s.push(this.getNodeAt({x:i,y:t})):(i==e.x||t==e.y)&&s.push(this.getNodeAt({x:i,y:t}));else continue;else continue;return s}setGrid(e){this.gridNodes=e}resetGrid(){for(let e=0;e<this.gridNodes.length;e++)for(let d=0;d<this.gridNodes[e].length;d++)this.gridNodes[e][d].setIsOnClosedList(!1),this.gridNodes[e][d].setIsOnOpenList(!1),this.gridNodes[e][d].setParent(void 0),this.gridNodes[e][d].setFGHValuesToZero()}getGridNodes(){return this.gridNodes}clone(){let e=[],d=0;for(let s=0;s<this.height;s++){e[s]=[];for(let t=0;t<this.width;t++)e[s][t]=new y.Node({id:d,position:{x:t,y:s},walkable:this.gridNodes[s][t].getIsWalkable()}),d++}return e}};c.Grid=w});var G=o(g=>{"use strict";Object.defineProperty(g,"__esModule",{value:!0});g.calculateHeuristic=void 0;function j(l,e,d,s){let t=Math.abs(d.x-e.x),i=Math.abs(d.y-e.y);switch(l){case"Manhatten":case"Manhattan":return(t+i)*s;case"Euclidean":return Math.sqrt(t*t+i*i)*s;case"Chebyshev":return Math.max(t,i)*s;case"Octile":return(t+i-.58*Math.min(t,i))*s}}g.calculateHeuristic=j});var x=o(f=>{"use strict";Object.defineProperty(f,"__esModule",{value:!0});f.backtrace=void 0;function E(l,e,d){let s=[],t;for(d?t=l:t=l.getParent();t.getParent();)s.push([t.position.x,t.position.y]),t=t.getParent();return e&&s.push([t.position.x,t.position.y]),s.reverse()}f.backtrace=E});var A=o(p=>{"use strict";Object.defineProperty(p,"__esModule",{value:!0});p.AStarFinder=void 0;var T=N(),Z=G(),R=x(),k=class{constructor(e){this.grid=new T.Grid({width:e.grid.width,height:e.grid.height,matrix:e.grid.matrix||void 0,densityOfObstacles:e.grid.densityOfObstacles||0}),this.closedList=[],this.openList=[],this.diagonalAllowed=e.diagonalAllowed!==void 0?e.diagonalAllowed:!0,this.heuristic=e.heuristic?e.heuristic:"Manhattan",this.includeStartNode=e.includeStartNode!==void 0?e.includeStartNode:!0,this.includeEndNode=e.includeEndNode!==void 0?e.includeEndNode:!0,this.weight=e.weight||1}findPath(e,d){this.closedList=[],this.openList=[],this.grid.resetGrid();let s=this.grid.getNodeAt(e),t=this.grid.getNodeAt(d);if(!this.grid.isWalkableAt(d)||!this.grid.isWalkableAt(e))return[];s.setIsOnOpenList(!0),this.openList.push(s);for(let i=0;i<this.grid.height;i++)for(let h=0;h<this.grid.width;h++){let n=this.grid.getNodeAt({x:h,y:i});this.grid.isWalkableAt({x:h,y:i})?n.setHValue(Z.calculateHeuristic(this.heuristic,n.position,t.position,this.weight)):(n.setFGHValuesToZero(),n.setIsOnClosedList(!0),this.closedList.push(n))}for(;this.openList.length!==0;){let i=this.openList.reduce((n,r)=>n.getFValue()<r.getFValue()?n:r);if(i.setIsOnOpenList(!1),this.openList=this.openList.filter(n=>n!==i),i.setIsOnClosedList(!0),this.closedList.push(i),i===t)return R.backtrace(t,this.includeStartNode,this.includeEndNode);let h=this.grid.getSurroundingNodes(i.position,this.diagonalAllowed);for(let n in h){let r=h[n];if(r.getIsOnClosedList())continue;let O=i.getGValue()+(r.position.x!==i.position.x||r.position.y==i.position.y?this.weight:this.weight*1.41421);(!r.getIsOnOpenList()||O<r.getGValue())&&(r.setGValue(O),r.setParent(i),r.getIsOnOpenList()?r.setParent(i):(r.setIsOnOpenList(!0),this.openList.push(r)))}}return[]}setHeuristic(e){this.heuristic=e}setWeight(e){this.weight=e}getGridClone(){return this.grid.clone()}getGrid(){return this.grid}};p.AStarFinder=k});var I=o(u=>{"use strict";Object.defineProperty(u,"__esModule",{value:!0});u.Grid=u.AStarFinder=void 0;var z=A();Object.defineProperty(u,"AStarFinder",{enumerable:!0,get:function(){return z.AStarFinder}});var B=N();Object.defineProperty(u,"Grid",{enumerable:!0,get:function(){return B.Grid}})});var F=q(I());onmessage=l=>{let e=l.data,d=new F.AStarFinder({grid:{matrix:e.grid},diagonalAllowed:!1,heuristic:"Manhattan"});e.input.forEach(([s,t])=>{let i=d.findPath(s,{x:t.x,y:t.y});postMessage({id:e.id,path:i})})};})();
